{"ast":null,"code":"import _toConsumableArray from \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport \"./dashboard.css\";\nimport { getCurrentProfile } from \"../../actions/profileActions\";\nimport Spinner from \"../common/Spinner\";\nimport Button from \"./Button\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.state = {\n      getAbortionPreferences: false,\n      getHIRPreferences: false,\n      getGunsPreferences: false,\n      getGayPreferences: false,\n      preferenceArray: [],\n      black: false\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      console.log(\"shadman\");\n      /*\n        const preferenceArray = this.state.preferenceArray;\n      console.log(\"val of preferenceArray\" + preferenceArray);\n      let current = e.target.getAttribute(\"dataTest\");\n      console.log(\"current attribute is\" + current);\n       for (var i = 0; i < preferenceArray.length; i++) {\n        if (preferenceArray[i] === current) {\n          var index = preferenceArray[i];\n          if (index > -1) {\n            preferenceArray.splice(index, 1);\n            console.log(preferenceArray);\n          }\n        } else {\n          this.setState(state => ({\n            preferenceArray: state.preferenceArray.push(current)\n          }));\n          console.log(\"hhhhh\" + preferenceArray);\n        }\n      }\n      }\n      */\n\n      /*\n      const getAbortionPreferences = this.setState.getAbortionPreferences;\n      const getHIRPreferences = this.setState.getHIRPreferences;\n      const getGayPreferences = this.setState.getGayPreferences;\n      const getGunsPreferences = this.setState.getGunsPreferences;\n       if (getAbortionPreferences === false) {\n        getAbortionPreferences = !getAbortionPreferences;\n        preferenceArray = state.preferenceArray.push(current);\n        this.setState(state => ({\n          getAbortionPreferences: !state.getAbortionPreferences,\n          preferenceArray: state.preferenceArray.push(current)\n        }));\n        console.log(\"situation is\" + current);\n      }\n      if (getGayPreferences === false) {\n        this.setState(state => ({\n          getGayPreferences: !state.getGayPreferences,\n          preferenceArray: state.preferenceArray.push(current)\n        }));\n      }\n      if (getGunsPreferences === false) {\n        this.setState(state => ({\n          getGunsPreferences: !state.getGunsPreferences,\n          preferenceArray: state.preferenceArray.push(current)\n        }));\n      }\n      if (getHIRPreferences === false) {\n        this.setState(state => ({\n          getHIRPreferences: !state.getHIRPreferences,\n          preferenceArray: state.preferenceArray.push(current)\n        }));\n      }\n      */\n\n      var color = this.state.black;\n      var current = e.target.getAttribute(\"dataTest\");\n      console.log(current);\n      var preferenceArray = this.state.preferenceArray;\n\n      if (preferenceArray.indexOf(current) > -1) {\n        var preferenceArray2 = _toConsumableArray(this.state.preferenceArray); // make a separate copy of the array\n\n\n        var index = preferenceArray2.indexOf(current);\n        preferenceArray2.splice(index, 1);\n      }\n\n      if (preferenceArray.indexOf(current) === -1) {\n        this.setState(function (prevState) {\n          return {\n            preferenceArray: _toConsumableArray(prevState.preferenceArray).concat([current])\n          };\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var btn_class = this.state.black ? \"blackButton\" : \"whiteButton\";\n      console.log(\"color of button \" + btn_class);\n      var preference = this.state.preferenceArray;\n      console.log(this.state.preferenceArray);\n      var user = this.props.auth.user;\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var dashboardContent;\n\n      if (profile == null || loading) {\n        dashboardContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        });\n      } else {\n        dashboardContent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"lead text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Welcome \", user.name), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Select all issues that you are interested in:\\xA0\", React.createElement(Link, {\n          to: \"/yourLocalMp\",\n          className: \"btn btn-lg btn-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Click to see your Local Mp\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Dashboard \", dashboardContent), React.createElement(Button, {\n        type: \"button\",\n        name: \"Abortion\",\n        value: \"Abortion\",\n        color: \"blackButton\",\n        color2: \"whiteButton\",\n        onClick: this.handleClick,\n        dataTest: \"Abortion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        type: \"button\",\n        name: \"Gay Marriage\",\n        value: \"GayMarriage\",\n        className: btn_class,\n        onClick: this.handleClick,\n        dataTest: \"GayMarriage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Gay Marraige\"), \"\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        type: \"button\",\n        name: \"Guns\",\n        value: \"Guns\",\n        className: btn_class,\n        dataTest: \"Guns\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Guns\", \"     \"), \"\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        type: \"button\",\n        name: \"HIR\",\n        value: \"HIR\",\n        className: btn_class,\n        dataTest: \"HIR\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Higher Interest Rates\", \"     \")))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapStsteToProps = function mapStsteToProps(state) {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nDashboard.PropTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\nexport default connect(mapStsteToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/angelicatriant/GitHub/members-of-parliament/MOPAIP2018/clients/src/components/dashboard/Dashboard.js"],"names":["React","Component","Link","PropTypes","connect","getCurrentProfile","Spinner","Button","Dashboard","props","state","getAbortionPreferences","getHIRPreferences","getGunsPreferences","getGayPreferences","preferenceArray","black","handleClick","bind","e","console","log","color","current","target","getAttribute","indexOf","preferenceArray2","index","splice","setState","prevState","btn_class","preference","user","auth","profile","loading","dashboardContent","name","mapStsteToProps","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport \"./dashboard.css\";\nimport { getCurrentProfile } from \"../../actions/profileActions\";\nimport Spinner from \"../common/Spinner\";\nimport Button from \"./Button\";\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      getAbortionPreferences: false,\n      getHIRPreferences: false,\n      getGunsPreferences: false,\n      getGayPreferences: false,\n      preferenceArray: [],\n      black: false\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    console.log(\"shadman\");\n    /*\n\n\n    const preferenceArray = this.state.preferenceArray;\n    console.log(\"val of preferenceArray\" + preferenceArray);\n    let current = e.target.getAttribute(\"dataTest\");\n    console.log(\"current attribute is\" + current);\n\n    for (var i = 0; i < preferenceArray.length; i++) {\n      if (preferenceArray[i] === current) {\n        var index = preferenceArray[i];\n        if (index > -1) {\n          preferenceArray.splice(index, 1);\n          console.log(preferenceArray);\n        }\n      } else {\n        this.setState(state => ({\n          preferenceArray: state.preferenceArray.push(current)\n        }));\n        console.log(\"hhhhh\" + preferenceArray);\n      }\n    }\n  }\n  */\n\n    /*\n    const getAbortionPreferences = this.setState.getAbortionPreferences;\n    const getHIRPreferences = this.setState.getHIRPreferences;\n    const getGayPreferences = this.setState.getGayPreferences;\n    const getGunsPreferences = this.setState.getGunsPreferences;\n\n    if (getAbortionPreferences === false) {\n      getAbortionPreferences = !getAbortionPreferences;\n      preferenceArray = state.preferenceArray.push(current);\n      this.setState(state => ({\n        getAbortionPreferences: !state.getAbortionPreferences,\n        preferenceArray: state.preferenceArray.push(current)\n      }));\n      console.log(\"situation is\" + current);\n    }\n    if (getGayPreferences === false) {\n      this.setState(state => ({\n        getGayPreferences: !state.getGayPreferences,\n        preferenceArray: state.preferenceArray.push(current)\n      }));\n    }\n    if (getGunsPreferences === false) {\n      this.setState(state => ({\n        getGunsPreferences: !state.getGunsPreferences,\n        preferenceArray: state.preferenceArray.push(current)\n      }));\n    }\n    if (getHIRPreferences === false) {\n      this.setState(state => ({\n        getHIRPreferences: !state.getHIRPreferences,\n        preferenceArray: state.preferenceArray.push(current)\n      }));\n    }\n    */\n    var color = this.state.black;\n    let current = e.target.getAttribute(\"dataTest\");\n    console.log(current);\n    const preferenceArray = this.state.preferenceArray;\n    if (preferenceArray.indexOf(current) > -1) {\n      let preferenceArray2 = [...this.state.preferenceArray]; // make a separate copy of the array\n      var index = preferenceArray2.indexOf(current);\n      preferenceArray2.splice(index, 1);\n    }\n\n    if (preferenceArray.indexOf(current) === -1) {\n      this.setState(prevState => ({\n        preferenceArray: [...prevState.preferenceArray, current]\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  render() {\n    let btn_class = this.state.black ? \"blackButton\" : \"whiteButton\";\n    console.log(\"color of button \" + btn_class);\n    const preference = this.state.preferenceArray;\n    console.log(this.state.preferenceArray);\n    const { user } = this.props.auth;\n    const { profile, loading } = this.props.profile;\n\n    let dashboardContent;\n\n    if (profile == null || loading) {\n      dashboardContent = <Spinner />;\n    } else {\n      dashboardContent = (\n        <div>\n          <p className=\"lead text-muted\">Welcome {user.name}</p>\n          <h2>\n            Select all issues that you are interested in:&nbsp;\n            <Link to=\"/yourLocalMp\" className=\"btn btn-lg btn-info\">\n              Click to see your Local Mp\n            </Link>\n            <hr />\n            <br />\n          </h2>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4\">Dashboard {dashboardContent}</h1>\n              <Button\n                type=\"button\"\n                name=\"Abortion\"\n                value=\"Abortion\"\n                color=\"blackButton\"\n                color2=\"whiteButton\"\n                onClick={this.handleClick}\n                dataTest=\"Abortion\"\n              />\n              &nbsp;&nbsp;&nbsp;\n              <Button\n                type=\"button\"\n                name=\"Gay Marriage\"\n                value=\"GayMarriage\"\n                className={btn_class}\n                onClick={this.handleClick}\n                dataTest=\"GayMarriage\"\n              >\n                Gay Marraige\n              </Button>\n              &nbsp;&nbsp;&nbsp;\n              <Button\n                type=\"button\"\n                name=\"Guns\"\n                value=\"Guns\"\n                className={btn_class}\n                dataTest=\"Guns\"\n                onClick={this.handleClick}\n              >\n                Guns\n                {\"     \"}\n              </Button>\n              &nbsp;&nbsp;&nbsp;\n              <Button\n                type=\"button\"\n                name=\"HIR\"\n                value=\"HIR\"\n                className={btn_class}\n                dataTest=\"HIR\"\n                onClick={this.handleClick}\n              >\n                Higher Interest Rates\n                {\"     \"}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStsteToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nDashboard.PropTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\nexport default connect(\n  mapStsteToProps,\n  { getCurrentProfile }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}