{"ast":null,"code":"/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.hoistNonReactStatics = factory();\n})(this, function () {\n  'use strict';\n\n  var REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n  };\n  var KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n  };\n  var defineProperty = Object.defineProperty;\n  var getOwnPropertyNames = Object.getOwnPropertyNames;\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var getPrototypeOf = Object.getPrototypeOf;\n  var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n  return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') {\n      // don't hoist over string (html) components\n      if (objectPrototype) {\n        var inheritedComponent = getPrototypeOf(sourceComponent);\n\n        if (inheritedComponent && inheritedComponent !== objectPrototype) {\n          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n        }\n      }\n\n      var keys = getOwnPropertyNames(sourceComponent);\n\n      if (getOwnPropertySymbols) {\n        keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n      }\n\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n\n        if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n          try {\n            // Avoid failures from read-only properties\n            defineProperty(targetComponent, key, descriptor);\n          } catch (e) {}\n        }\n      }\n\n      return targetComponent;\n    }\n\n    return targetComponent;\n  };\n});","map":null,"metadata":{},"sourceType":"script"}